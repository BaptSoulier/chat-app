version: '3.8'

services:
  postgres:
    image: postgres:13
    container_name: mypostgres
    environment:
      POSTGRES_USER: myuser
      POSTGRES_PASSWORD: mypassword
      POSTGRES_DB: mydatabase
    networks:
      - mynetwork
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./entrypoint.sh:/docker-entrypoint-initdb.d/entrypoint.sh
    entrypoint: ["/bin/bash", "/docker-entrypoint-initdb.d/entrypoint.sh"]

  redis:
    image: redis:latest
    container_name: myredis
    networks:
      - mynetwork
    ports:
      - "6379:6379"

  web:
    build: .
    container_name: mywebapp
    volumes:
      - ./Web:/usr/local/apache2/htdocs/Web
      - ./my-httpd.conf:/usr/local/apache2/conf/conf.d/my-httpd.conf
    environment:
      NODE_ENV: production
      REDIS_HOST: redis
    networks:
      - mynetwork
    ports:
      - "3000:3000"
    depends_on:
      - postgres
      - redis

  pgadmin:
    image: dpage/pgadmin4
    container_name: mypgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - mynetwork

networks:
  mynetwork:
    driver: bridge

volumes:
  postgres-data:
